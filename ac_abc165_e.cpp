//https://atcoder.jp/contests/abc165/tasks/abc165_e
#include<bits/stdc++.h>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define rrep(i,a,b) for(int i=a;i>=b;i--)
#define fore(i,a) for(auto &i:a)
#define all(x) (x).begin(),(x).end()
//#pragma GCC optimize ("-O3")
using namespace std; void _main(); int main() { cin.tie(0); ios::sync_with_stdio(false); _main(); }
typedef long long ll; const int inf = INT_MAX / 2; const ll infl = 1LL << 60;
template<class T>bool chmax(T& a, const T& b) { if (a < b) { a = b; return 1; } return 0; }
template<class T>bool chmin(T& a, const T& b) { if (b < a) { a = b; return 1; } return 0; }
//---------------------------------------------------------------------------------------------------
/*---------------------------------------------------------------------------------------------------
　　　　　　　　　　　 ∧＿∧
　　　　　 ∧＿∧ 　（´<_｀ ）　 Welcome to My Coding Space!
　　　　 （ ´_ゝ`）　/　 ⌒i     @hamayanhamayan0
　　　　／　　　＼　 　  |　|
　　　 /　　 /￣￣￣￣/　　|
　 ＿_(__ﾆつ/　    ＿/ .| .|＿＿＿＿
　 　　　＼/＿＿＿＿/　（u　⊃
---------------------------------------------------------------------------------------------------*/














int N, M;
//---------------------------------------------------------------------------------------------------
void _main() {
	cin >> N >> M;

	if (M == 1) {
		printf("1 2\n");
		return;
	}

	int i1 = 1;
	int i2 = M + 2;

	rrep(diff, M, 1) {
		printf("%d %d\n", i1, i1 + diff);
		i1++;
		swap(i1, i2);
	}
}





/* ///////////////////////// writeup1 start
///////////////////////// writeup2 start
頑張ってスマートな方針を考える。
最も厳しいパターンで方針を考えるのが良いだろう。
今回であれば、対戦相手が少ないほど、再戦の可能性が上がりそうなので、N=2M+1のパターンで考えるといい。

これで頑張って考えて、以下の方針をひねり出す。
「M個の対戦場はそれぞれ違う距離の対戦相手と戦うようにする」
例えば、M=3, N=7であれば、以下のように頑張る。
A vs Bの戦いと考える。
- 1つ目の対戦場は、B-A=1となるようにする
- 2つ目の対戦場は、B-A=2となるようにする
- 3つ目の対戦場は、B-A=3となるようにする
こうしておくと、対戦番号がシフトしても対戦相手との差は変わらないので、異なる対戦場で同じパターンが現れることはない。
あとは、最初の番号がすべて異なるように配置してやれば、各対戦場で+1されても、
その対戦場の差でのパターンはN通りあり、順番にそれが当たるので、問題ない。
問題は、どのように初期配置を決めるかである。
簡潔に表現すると、以下の図のようにする。

図

このように奇数と偶数で分けて、重ねていくと、場所をかなり節約でき、組を作ることができる。
あとは、これをうまく実装する。
///////////////////////// writeup2 end */
